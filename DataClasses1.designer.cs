#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GasUp_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GasUp_Database")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GasUp_DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private string _Product_Name;
		
		private string _Product_Description;
		
		private decimal _Product_Price;
		
		private string _Product_Review;
		
		private int _Product_Size;
		
		private System.Data.Linq.Binary _Product_Availability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnProduct_NameChanging(string value);
    partial void OnProduct_NameChanged();
    partial void OnProduct_DescriptionChanging(string value);
    partial void OnProduct_DescriptionChanged();
    partial void OnProduct_PriceChanging(decimal value);
    partial void OnProduct_PriceChanged();
    partial void OnProduct_ReviewChanging(string value);
    partial void OnProduct_ReviewChanged();
    partial void OnProduct_SizeChanging(int value);
    partial void OnProduct_SizeChanged();
    partial void OnProduct_AvailabilityChanging(System.Data.Linq.Binary value);
    partial void OnProduct_AvailabilityChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Product_Name
		{
			get
			{
				return this._Product_Name;
			}
			set
			{
				if ((this._Product_Name != value))
				{
					this.OnProduct_NameChanging(value);
					this.SendPropertyChanging();
					this._Product_Name = value;
					this.SendPropertyChanged("Product_Name");
					this.OnProduct_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Product_Description
		{
			get
			{
				return this._Product_Description;
			}
			set
			{
				if ((this._Product_Description != value))
				{
					this.OnProduct_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Product_Description = value;
					this.SendPropertyChanged("Product_Description");
					this.OnProduct_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Price", DbType="Money NOT NULL")]
		public decimal Product_Price
		{
			get
			{
				return this._Product_Price;
			}
			set
			{
				if ((this._Product_Price != value))
				{
					this.OnProduct_PriceChanging(value);
					this.SendPropertyChanging();
					this._Product_Price = value;
					this.SendPropertyChanged("Product_Price");
					this.OnProduct_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Review", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Product_Review
		{
			get
			{
				return this._Product_Review;
			}
			set
			{
				if ((this._Product_Review != value))
				{
					this.OnProduct_ReviewChanging(value);
					this.SendPropertyChanging();
					this._Product_Review = value;
					this.SendPropertyChanged("Product_Review");
					this.OnProduct_ReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Size", DbType="Int NOT NULL")]
		public int Product_Size
		{
			get
			{
				return this._Product_Size;
			}
			set
			{
				if ((this._Product_Size != value))
				{
					this.OnProduct_SizeChanging(value);
					this.SendPropertyChanging();
					this._Product_Size = value;
					this.SendPropertyChanged("Product_Size");
					this.OnProduct_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Availability", DbType="Binary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Product_Availability
		{
			get
			{
				return this._Product_Availability;
			}
			set
			{
				if ((this._Product_Availability != value))
				{
					this.OnProduct_AvailabilityChanging(value);
					this.SendPropertyChanging();
					this._Product_Availability = value;
					this.SendPropertyChanged("Product_Availability");
					this.OnProduct_AvailabilityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Customer_Id;
		
		private string _Customer_Name;
		
		private string _Customer_Surname;
		
		private string _Customer_email;
		
		private string _Customer_PhoneNumber;
		
		private string _Customer_Password;
		
		private string _Customer_StreetAddress;
		
		private string _Customer_Suburb;
		
		private string _Customer_PostalCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_IdChanging(int value);
    partial void OnCustomer_IdChanged();
    partial void OnCustomer_NameChanging(string value);
    partial void OnCustomer_NameChanged();
    partial void OnCustomer_SurnameChanging(string value);
    partial void OnCustomer_SurnameChanged();
    partial void OnCustomer_emailChanging(string value);
    partial void OnCustomer_emailChanged();
    partial void OnCustomer_PhoneNumberChanging(string value);
    partial void OnCustomer_PhoneNumberChanged();
    partial void OnCustomer_PasswordChanging(string value);
    partial void OnCustomer_PasswordChanged();
    partial void OnCustomer_StreetAddressChanging(string value);
    partial void OnCustomer_StreetAddressChanged();
    partial void OnCustomer_SuburbChanging(string value);
    partial void OnCustomer_SuburbChanged();
    partial void OnCustomer_PostalCodeChanging(string value);
    partial void OnCustomer_PostalCodeChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Customer_Id
		{
			get
			{
				return this._Customer_Id;
			}
			set
			{
				if ((this._Customer_Id != value))
				{
					this.OnCustomer_IdChanging(value);
					this.SendPropertyChanging();
					this._Customer_Id = value;
					this.SendPropertyChanged("Customer_Id");
					this.OnCustomer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Name
		{
			get
			{
				return this._Customer_Name;
			}
			set
			{
				if ((this._Customer_Name != value))
				{
					this.OnCustomer_NameChanging(value);
					this.SendPropertyChanging();
					this._Customer_Name = value;
					this.SendPropertyChanged("Customer_Name");
					this.OnCustomer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Surname
		{
			get
			{
				return this._Customer_Surname;
			}
			set
			{
				if ((this._Customer_Surname != value))
				{
					this.OnCustomer_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Customer_Surname = value;
					this.SendPropertyChanged("Customer_Surname");
					this.OnCustomer_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Customer_email
		{
			get
			{
				return this._Customer_email;
			}
			set
			{
				if ((this._Customer_email != value))
				{
					this.OnCustomer_emailChanging(value);
					this.SendPropertyChanging();
					this._Customer_email = value;
					this.SendPropertyChanged("Customer_email");
					this.OnCustomer_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Customer_PhoneNumber
		{
			get
			{
				return this._Customer_PhoneNumber;
			}
			set
			{
				if ((this._Customer_PhoneNumber != value))
				{
					this.OnCustomer_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Customer_PhoneNumber = value;
					this.SendPropertyChanged("Customer_PhoneNumber");
					this.OnCustomer_PhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Customer_Password
		{
			get
			{
				return this._Customer_Password;
			}
			set
			{
				if ((this._Customer_Password != value))
				{
					this.OnCustomer_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Customer_Password = value;
					this.SendPropertyChanged("Customer_Password");
					this.OnCustomer_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_StreetAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Customer_StreetAddress
		{
			get
			{
				return this._Customer_StreetAddress;
			}
			set
			{
				if ((this._Customer_StreetAddress != value))
				{
					this.OnCustomer_StreetAddressChanging(value);
					this.SendPropertyChanging();
					this._Customer_StreetAddress = value;
					this.SendPropertyChanged("Customer_StreetAddress");
					this.OnCustomer_StreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Suburb", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Suburb
		{
			get
			{
				return this._Customer_Suburb;
			}
			set
			{
				if ((this._Customer_Suburb != value))
				{
					this.OnCustomer_SuburbChanging(value);
					this.SendPropertyChanging();
					this._Customer_Suburb = value;
					this.SendPropertyChanged("Customer_Suburb");
					this.OnCustomer_SuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_PostalCode", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string Customer_PostalCode
		{
			get
			{
				return this._Customer_PostalCode;
			}
			set
			{
				if ((this._Customer_PostalCode != value))
				{
					this.OnCustomer_PostalCodeChanging(value);
					this.SendPropertyChanging();
					this._Customer_PostalCode = value;
					this.SendPropertyChanged("Customer_PostalCode");
					this.OnCustomer_PostalCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
